body {
	display: grid;
	/* grid-template-columns: 4fr 1fr; */
	/* grid-template-rows: max-content max-content auto; */
	/* grid-template-areas: 
		"head head"
		"content new-transaction"
		"content transactions"; */
	grid-template-rows: max-content auto max-content;
	grid-template-areas: 
		"head"
		"content"
		"new-transaction";
	gap: 0.5em;
	height: 100vh;


	@media screen and (max-width: 899px) {
		&:has(#expand input:checked) {
			grid-template-rows: max-content max-content auto;
			grid-template-areas: 
				"head"
				"new-transaction"
				"transactions";

			& main {
				display: none;
			}

			& div:has(#transactions) {
				display: unset;
			}
		}
	}


	@media screen and (min-width: 900px) {
		& {
			grid-template-columns: 3fr minmax(min-content, 1fr);
			grid-template-rows: max-content max-content auto;
			grid-template-areas: 
				"head head"
				"content new-transaction"
				"content transactions";
			/* gap: 0.25em; */
		}

		#expand {
			display: none;
		}
	}
}

header {
	grid-area: head;
}

main {
	display: grid;
	grid-area: content;
	grid-template-rows: subgrid;
	overflow: hidden;
	/* padding-left: 0.25em;
	padding-bottom: 0.25em; */
	padding-inline: 0.5em;


	@media screen and (min-width: 900px) {
		& {
			padding: 0 0 0.5em 0.5em;
		}
	}
}

/* #transactions {
	display: grid;
	grid-template-columns: auto auto max-content;
	gap: 0.25em;
	padding: 0;
	margin: 0;
	padding-right: 0.25em;
	list-style: none;
	overflow-y: auto;
	grid-area: transactions;

	& .timestamp {
		font-size: 80%;
		color: var(--secondary-text-color);
		margin-top: 1em;
	}
} */

div:has(#transactions) {
	overflow: hidden auto;
	scrollbar-width: thin;
	grid-area: transactions;


	@media screen and (max-width: 899px) {
		& {
			display: none;
		}
	}
}

#new-transaction {
	/* padding: 0.25em; */
	--bg: color-mix(in srgb, var(--secondary-bg-color), var(--selected-color) 20%);
	
	background: linear-gradient(to right, var(--bg) 50%, transparent 0) left;
	background-size: 200% 100%;
	background-position-x: left;
	/* margin-right: 0.25em; */
	margin: 0 0.25em 0.25em;
	position: relative;
	grid-area: new-transaction;
	border: thin solid var(--selected-color);
	/* background: var(--bg); */
	grid-template-columns: auto auto max-content;
	grid-template-areas: 
		"account price undo"
		"reason  price undo";
	grid-auto-columns: max-content;

	&.timeout {
		animation: both 10s progress-background ease-in-out;
	}
	
	& .overlay {
		position: absolute;
		display: flex;
		justify-content: center;
		inset: 0;
		background-color: rgba(71, 71, 71, 0.726);
		text-align: center;
		
		&:not([visible]) {
			display: none;
		}

		& svg {
			display: none;
		}

		&[data-status="pending"] svg[data-status="pending"],
		&[data-status="success"] svg[data-status="success"],
		&[data-status="failure"] svg[data-status="failure"] {
			display: unset;
		}

		& svg[data-status="pending"] {
			stroke-width: 1;
			stroke: rgb(107, 107, 107);
			fill: none;
			stroke-linecap: round;
			stroke-linejoin: round;
			stroke-dasharray: 8px 24px;
			stroke-dashoffset: 0px;
			animation: 
				1.5s infinite spinner linear,
				2s infinite alternate chase-lag cubic-bezier(.58,.14,.65,.99);
		}

		& svg[data-status="success"] {
			stroke-width: 1;
			stroke: green;
			fill: none;
			stroke-linecap: round;
			stroke-linejoin: round;
			stroke-dasharray: 16px;
			stroke-dashoffset: 0px;
			animation:
				300ms draw ease-in-out;
		}


	}

	& .undo:not([disabled]):hover {
		background-color: color-mix(in srgb, var(--bg), var(--highlight-color) 10%);
	}

	& .empty {
		font-style: italic;
	}

	& #expand {
		grid-row: 1 / -1;
		grid-column: 4;

		& input[type="checkbox"] {
			display: none;
		}

		&:has(input:checked) svg {
			rotate: 180deg;
		}
	}

	& button[type="submit"] {
		
		grid-row: 1 / -1;
		grid-column: 4;
	}


	@media screen and (min-width: 900px) {
		& {
			margin: 0 0.5em 0 0;
		}
	}

	& .empty:has(~ output:not(:empty)) {
		display: none;
	}
}

@keyframes progress-background {
	from { background-position-x: left; }
	  to { background-position-x: right; }
}


@media screen and (max-width: 899px) {
	div:has(> #transaction-multiplier) {
		display: none;
	}
}

#transaction-multiplier {
	margin: 0;
	padding: 0.25em 0.5em;
	/* margin-right:2ch; */

	cursor: default;
	align-self: center;
	
	font-weight: normal;
	font-size: 125%;

	background-color: var(--secondary-bg-color);

	& input[type="number"] {
		width: 3em;
		background: none;
		border: none;
		text-align: right;
	}

	& > span::after,
	& label::after {
		content: 'x';
		color: var(--secondary-text-color);
		font-size: 80%;
		margin-left: 2px;
	}
}

@keyframes draw {
	from { stroke-dashoffset: 16px; }
	  to { stroke-dashoffset: 0px; }
}

@keyframes spinner {
	from { stroke-dashoffset: 32px; }
	  to { stroke-dashoffset: 0px; }
}

@keyframes chase-lag {
	from { stroke-dasharray: 8px 24px; }
	  to { stroke-dasharray: 20px 12px; }
}


.slide-bar {
	display: flex;
	flex-flow: row nowrap;
	align-items: center;
	
	& .slide-indicator {
		/* margin: 0;
		padding: 0.75em 1em;
		display: block; */

		cursor: default;
		
		font-weight: normal;
		font-size: 1em;

		/* transition: background-color 200ms ease-in-out; */

		/* &:hover {
			background-color: color-mix(in srgb, var(--secondary-bg-color), var(--highlight-color) 10%) !important;
		} */
	}
}

.slideshow {
	overflow: hidden auto;
	scrollbar-width: thin;
	display: flex;
	flex-flow: column nowrap;

	scroll-snap-type: y mandatory;
	scroll-behavior: smooth;
	width: 100%;
	position: relative;

	&.horizontal {
		flex-flow: row nowrap;
		overflow: auto hidden;
		scroll-snap-type: x mandatory;
	}

	& .slide {
		scroll-snap-align: center;
		width: 100%;
		height: 100%;
		flex-shrink: 0;

		& > h2 {
			display: none;
		}
	}
}

.status {
	display: flex;
	flex-flow: column nowrap;
	justify-content: center;

	& svg {
		display: none;
	}

	&[data-status="pending"] svg[data-status="pending"],
	&[data-status="success"] svg[data-status="success"],
	&[data-status="failure"] svg[data-status="failure"] {
		display: unset;
	}

	& svg[data-status="pending"] {
		stroke-width: 1;
		stroke: rgb(107, 107, 107);
		fill: none;
		stroke-linecap: round;
		stroke-linejoin: round;
		stroke-dasharray: 8px 24px;
		stroke-dashoffset: 0px;
		animation: 
			1.5s infinite spinner linear,
			2s infinite alternate chase-lag cubic-bezier(.58,.14,.65,.99);
	}

	& svg[data-status="success"] {
		stroke-width: 1;
		stroke: green;
		fill: none;
		stroke-linecap: round;
		stroke-linejoin: round;
		stroke-dasharray: 16px;
		stroke-dashoffset: 0px;
		animation:
			300ms draw ease-in-out;
	}
	
	& svg[data-status="failure"] {
		stroke-width: 1;
		stroke: rgb(189, 0, 0);
		fill: none;
		stroke-linecap: round;
		stroke-linejoin: round;
		
		& polyline {
			stroke-dasharray: 16px;
			stroke-dashoffset: 0px;
			animation:
				250ms draw both ease-in-out;
		}

		& polyline:nth-of-type(2) {
			animation-delay: 100ms;
		}
	}
}

label:has(#item-search) {
	display: flex;
	flex-direction: row;
	align-items: center;

	background-color: var(--secondary-bg-color);
	padding: 0.25em 0.5em;
	gap: 0.5em;

	input {
		background: none;
		border: none;
		color: inherit;
		padding: 0.25em;
	}
}

label:has(input[name="invert_member"]) {
	margin-right: 0.5em;
	padding: 0.375em;
	font-size: 125%;
	color: var(--secondary-text-color);
	
	&:has(input:checked) {
		color: color-mix(in srgb, var(--selected-color), var(--highlight-color) 25%);
	}
}
