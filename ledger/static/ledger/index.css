@import url('./transaction_history.css');

body {
	display: grid;
	grid-template-columns: 4fr 1fr;
	grid-template-rows: max-content max-content auto;
	grid-template-areas: 
		"head head"
		"content new-transaction"
		"content transactions";
	gap: 0.5em;
	height: 100vh;
}

header {
	grid-area: head;
}

main {
	display: grid;
	grid-area: content;
	grid-template-rows: subgrid;
	overflow: hidden;
	padding-left: 0.25em;
	padding-bottom: 0.25em;
}

/* #transactions {
	display: grid;
	grid-template-columns: auto auto max-content;
	gap: 0.25em;
	padding: 0;
	margin: 0;
	padding-right: 0.25em;
	list-style: none;
	overflow-y: auto;
	grid-area: transactions;

	& .timestamp {
		font-size: 80%;
		color: var(--secondary-text-color);
		margin-top: 1em;
	}
} */

div:has(#transactions) {
	overflow: hidden auto;
	grid-area: transactions;
}

#new-transaction {
	/* padding: 0.25em; */
	--bg: color-mix(in srgb, var(--secondary-bg-color), var(--selected-color) 20%);
	background: linear-gradient(to right, var(--bg) 50%, transparent 50%) left;
	margin-right: 0.25em;
	position: relative;
	grid-area: new-transaction;
	border: thin solid var(--selected-color);
	background: var(--bg);
	grid-template-columns: auto auto max-content;
	
	& .overlay {
		position: absolute;
		display: flex;
		justify-content: center;
		inset: 0;
		background-color: rgba(71, 71, 71, 0.726);
		text-align: center;
		
		&:not([visible]) {
			display: none;
		}

		& svg {
			display: none;
		}

		&[data-status="pending"] svg[data-status="pending"],
		&[data-status="success"] svg[data-status="success"],
		&[data-status="failure"] svg[data-status="failure"] {
			display: unset;
		}

		& svg[data-status="pending"] {
			stroke-width: 1;
			stroke: rgb(107, 107, 107);
			fill: none;
			stroke-linecap: round;
			stroke-linejoin: round;
			stroke-dasharray: 8px 24px;
			stroke-dashoffset: 0px;
			animation: 
				1.5s infinite spinner linear,
				2s infinite alternate chase-lag cubic-bezier(.58,.14,.65,.99);
		}

		& svg[data-status="success"] {
			stroke-width: 1;
			stroke: green;
			fill: none;
			stroke-linecap: round;
			stroke-linejoin: round;
			stroke-dasharray: 16px;
			stroke-dashoffset: 0px;
			animation:
				300ms draw ease-in-out;
		}


	}

	& .undo:not([disabled]):hover {
		background-color: color-mix(in srgb, var(--bg), var(--highlight-color) 10%);
	}

	& [empty] {
		font-style: italic;
	}
}

#transaction-multiplier {
	&::after {
		content: 'x';
		color: var(--secondary-text-color);
		font-size: 80%;
		margin-left: 2px;
	}
	
	div:has(> &) {
		margin: 0;
		padding: 0.25em 0.5em;
		/* margin-right:2ch; */

		cursor: default;
		align-self: center;
		
		font-weight: normal;
		font-size: 125%;

		background-color: var(--secondary-bg-color);

		
	}
}

@keyframes draw {
	from { stroke-dashoffset: 16px; }
	  to { stroke-dashoffset: 0px; }
}

@keyframes spinner {
	from { stroke-dashoffset: 32px; }
	  to { stroke-dashoffset: 0px; }
}

@keyframes chase-lag {
	from { stroke-dasharray: 8px 24px; }
	  to { stroke-dasharray: 20px 12px; }
}


.slide-bar {
	display: flex;
	flex-flow: row nowrap;
	align-items: center;
	
	& .slide-indicator {
		/* margin: 0;
		padding: 0.75em 1em;
		display: block; */

		cursor: default;
		
		font-weight: normal;
		font-size: 1em;

		/* transition: background-color 200ms ease-in-out; */

		/* &:hover {
			background-color: color-mix(in srgb, var(--secondary-bg-color), var(--highlight-color) 10%) !important;
		} */
	}
}

.slideshow {
	overflow-x: auto;
	display: flex;
	flex-flow: row nowrap;

	scroll-snap-type: x mandatory;
	scroll-behavior: smooth;
	width: 100%;
	position: relative;

	& .slide {
		scroll-snap-align: center;
		width: 100%;
		height: 100%;
		flex-shrink: 0;
	}
}

.status {
	display: flex;
	flex-flow: column nowrap;
	justify-content: center;

	& svg {
		display: none;
	}

	&[data-status="pending"] svg[data-status="pending"],
	&[data-status="success"] svg[data-status="success"],
	&[data-status="failure"] svg[data-status="failure"] {
		display: unset;
	}

	& svg[data-status="pending"] {
		stroke-width: 1;
		stroke: rgb(107, 107, 107);
		fill: none;
		stroke-linecap: round;
		stroke-linejoin: round;
		stroke-dasharray: 8px 24px;
		stroke-dashoffset: 0px;
		animation: 
			1.5s infinite spinner linear,
			2s infinite alternate chase-lag cubic-bezier(.58,.14,.65,.99);
	}

	& svg[data-status="success"] {
		stroke-width: 1;
		stroke: green;
		fill: none;
		stroke-linecap: round;
		stroke-linejoin: round;
		stroke-dasharray: 16px;
		stroke-dashoffset: 0px;
		animation:
			300ms draw ease-in-out;
	}
	
	& svg[data-status="failure"] {
		stroke-width: 1;
		stroke: rgb(189, 0, 0);
		fill: none;
		stroke-linecap: round;
		stroke-linejoin: round;
		
		& polyline {
			stroke-dasharray: 16px;
			stroke-dashoffset: 0px;
			animation:
				250ms draw both ease-in-out;
		}

		& polyline:nth-of-type(2) {
			animation-delay: 100ms;
		}
	}
}
